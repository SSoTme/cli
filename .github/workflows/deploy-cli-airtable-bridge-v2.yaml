name: Airtable Bridge v2 Workflow

on:
  push:
    branches: [ "copilot-plugin" ]
  workflow_dispatch:

env:
  CPLN_ORG: ${{vars.CPLN_ORG}}
  CPLN_GVC: ${{vars.CPLN_GVC_NAME}}
  CPLN_WORKLOAD: ${{vars.CPLN_WORKLOAD_NAME}}
  CPLN_TOKEN: ${{secrets.SERVICE_ACCOUNT_KEY}}
  CPLN_IMAGE: ${{vars.CPLN_IMAGE_NAME}}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set Short SHA
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

      - name: Install Control Plane CLI
        shell: bash
        run: |
          sudo npm install -g @controlplane/cli
          cpln --version

      - name: Containerize application and push image
        shell: bash
        working-directory: ./build-on-trigger
        run: |
          cpln profile update default --token ${CPLN_TOKEN}
          cpln image docker-login
          cpln image build \
            --name ${CPLN_IMAGE}:${SHORT_SHA} \
            --dockerfile Dockerfile \
            --push \

      - name: Substitute Tokens in Control Plane YAML Files
        shell: bash
        working-directory: ./.cpln
        run: |
          sed -i "s/WORKLOAD_NAME/${CPLN_WORKLOAD}/" cpln-cli-airtable-bridge-v2-workload.yaml
          sed -i "s/IMAGE_NAME_TAG/${CPLN_IMAGE}:${SHORT_SHA}/" cpln-cli-airtable-bridge-v2-workload.yaml
          sed -i "s/ORG_NAME/${CPLN_ORG}/" cpln-cli-airtable-bridge-v2-workload.yaml

      - name: Run CPLN Apply
        shell: bash
        working-directory: ./.cpln
        run: |
          cpln apply -f cpln-cli-airtable-bridge-v2-workload.yaml --gvc ${CPLN_GVC}
