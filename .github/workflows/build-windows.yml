name: Build Windows Installers

on:
  push:
    branches: [ '*' ]

jobs:
  build-x64:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Build Windows Installer (x64)
      run: |
        ./build-installer.ps1
      shell: powershell
    
    - name: Upload x64 Installer
      uses: actions/upload-artifact@v4
      with:
        name: SSoTme-Installer-win-x64
        path: Windows/Installer/bin/Release/SSoTme-Installer_win-x64.msi

    - name: Get release tag from package.json
      id: get_tag
      run: |
        $packageJson = Get-Content package.json | ConvertFrom-Json
        $version = $packageJson.version
        $tagName = "v$version"
        echo "tag_name=$tagName" >> $env:GITHUB_OUTPUT
        Write-Host "Will upload to release: $tagName"
      shell: powershell
    
    - name: Check if release has non-source assets
      id: check_release
      run: |
        $tagName = "${{ steps.get_tag.outputs.tag_name }}"
        try {
          $release = gh release view $tagName --json assets 2>$null
          if ($release) {
            $assets = ($release | ConvertFrom-Json).assets
            $nonSourceCount = ($assets | Where-Object { $_.name -notmatch '\.(zip|tar\.gz)$' }).Count
            echo "non_source_count=$nonSourceCount" >> $env:GITHUB_OUTPUT
            Write-Host "Release $tagName has $nonSourceCount non-source assets"
          } else {
            echo "non_source_count=0" >> $env:GITHUB_OUTPUT
            Write-Host "Release $tagName does not exist - will create it"
          }
        } catch {
          echo "non_source_count=0" >> $env:GITHUB_OUTPUT
          Write-Host "Release $tagName does not exist - will create it"
        }
      shell: powershell
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to Release
      if: steps.check_release.outputs.non_source_count == '0'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag_name }}
        files: Windows/Installer/bin/Release/SSoTme-Installer_win-x64.msi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-arm64:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Force ARM64 Architecture
      run: |
        # Override architecture detection to build ARM64 version
        $buildScript = Get-Content "Windows/Installer/Scripts/build.ps1" -Raw
        $buildScript = $buildScript -replace '\$arch = \(Get-CimInstance Win32_OperatingSystem\)\.OSArchitecture', '$arch = "ARM 64-bit"'
        Set-Content "Windows/Installer/Scripts/build.ps1" $buildScript -NoNewline
      shell: powershell
    
    - name: Build Windows Installer (ARM64)
      run: |
        ./build-installer.ps1
      shell: powershell
    
    - name: Upload ARM64 Installer
      uses: actions/upload-artifact@v4
      with:
        name: SSoTme-Installer-win-arm64
        path: Windows/Installer/bin/Release/SSoTme-Installer_win-arm64.msi

    - name: Get release tag from package.json
      id: get_tag_arm
      run: |
        $packageJson = Get-Content package.json | ConvertFrom-Json
        $version = $packageJson.version
        $tagName = "v$version"
        echo "tag_name=$tagName" >> $env:GITHUB_OUTPUT
        Write-Host "Will upload to release: $tagName"
      shell: powershell
    
    - name: Check if release has non-source assets
      id: check_release_arm
      run: |
        $tagName = "${{ steps.get_tag_arm.outputs.tag_name }}"
        try {
          $release = gh release view $tagName --json assets 2>$null
          if ($release) {
            $assets = ($release | ConvertFrom-Json).assets
            $nonSourceCount = ($assets | Where-Object { $_.name -notmatch '\.(zip|tar\.gz)$' }).Count
            echo "non_source_count=$nonSourceCount" >> $env:GITHUB_OUTPUT
            Write-Host "Release $tagName has $nonSourceCount non-source assets"
          } else {
            echo "non_source_count=0" >> $env:GITHUB_OUTPUT
            Write-Host "Release $tagName does not exist - will create it"
          }
        } catch {
          echo "non_source_count=0" >> $env:GITHUB_OUTPUT
          Write-Host "Release $tagName does not exist - will create it"
        }
      shell: powershell
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to Release
      if: steps.check_release_arm.outputs.non_source_count == '0'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag_arm.outputs.tag_name }}
        files: Windows/Installer/bin/Release/SSoTme-Installer_win-arm64.msi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
