/*******************************************
 Initially Generated by SSoT.me - codee42 & odxml42
 Created By: EJ Alexandra - 2017
             An Abstract Level, llc
 License:    Mozilla Public License 2.0
 *******************************************/
using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace SSoTme.OST.Lib.DataClasses
{
    public partial class FileSetFile
    {
        public string OriginalRelativePath { get; set; }

        /// <summary>
        /// String-based overwrite mode for compatibility with remote transpilers.
        /// Maps to the AlwaysOverwrite boolean property.
        /// Accepts "Always" (case-insensitive) -> AlwaysOverwrite = true
        /// Accepts "Never" (case-insensitive) or null -> AlwaysOverwrite = false
        /// </summary>
        [JsonProperty(PropertyName = "OverwriteMode")]
        public string OverwriteMode
        {
            get
            {
                return AlwaysOverwrite ? "Always" : "Never";
            }
            set
            {
                if (string.IsNullOrEmpty(value))
                {
                    AlwaysOverwrite = false;
                }
                else if (value.Equals("Always", StringComparison.OrdinalIgnoreCase))
                {
                    AlwaysOverwrite = true;
                }
                else if (value.Equals("Never", StringComparison.OrdinalIgnoreCase))
                {
                    AlwaysOverwrite = false;
                }
                else
                {
                    AlwaysOverwrite = false; // Default for unknown values
                }
            }
        }

        public override string ToString()
        {
            return this.RelativePath;
        }

        internal void ClearContents()
        {
            this.BinaryFileContents = null;
            this.FileContents = null;
            this.ZippedBinaryFileContents = null;
            this.ZippedFileContents = null;
            this.ZippedTextFileContents = null;
        }
    }


}